generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
enum Role {
  ADMIN
  CLIENT
  SELLER
}
model User {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email     String @unique
  password  String
  firstname String
  lastname  String
  roles     Role[]

  cart      Cart?
  orders    Order[]  
}

model Product {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name       String
  price      Float
  stock     Int
  carts     CartProduct[]
  order      OrderProduct[]     
}

model Cart {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId    Int      @unique
  user      User     @relation(fields: [userId], references: [id])
  products  CartProduct[]
}

model CartProduct {
  cartId    Int
  productId Int
  
  quantity  Int

  cart      Cart     @relation(fields: [cartId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])

  @@id([cartId, productId])
}

enum OrderStatus {
  RESERVED
  VALIDATED
  CANCELED
  REJECTED
}
model Order {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 

  userId    Int
  address   String
  status    OrderStatus @default(RESERVED)
  products  OrderProduct[]
  user      User     @relation(fields: [userId], references: [id])
}
model OrderProduct {
  orderId    Int
  productId Int
  
  quantity  Int

  order      Order     @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])

  @@id([orderId, productId])
}