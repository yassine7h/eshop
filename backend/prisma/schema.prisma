generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  CLIENT
  SELLER
  SUPADMIN
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email     String @unique
  password  String
  firstname String
  lastname  String
  address   String?
  roles     Role[]
  isActive  Boolean @default(false)

  cart    Cart?
  orders  Order[]
  reviews Review[]
}

model Product {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  picture String?
  name    String
  price   Float
  stock   Int
  carts   CartProduct[]
  order   OrderProduct[]
  reviews Review[]
}

model Cart {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId   Int           @unique
  user     User          @relation(fields: [userId], references: [id])
  products CartProduct[]
}

model CartProduct {
  cartId    Int
  productId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  quantity Int

  cart    Cart    @relation(fields: [cartId], references: [id])
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@id([cartId, productId])
}

enum OrderStatus {
  RESERVED
  VALIDATED
  CANCELED
  REJECTED
}

model Order {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId   Int
  address  String
  status   OrderStatus    @default(RESERVED)
  products OrderProduct[]
  user     User           @relation(fields: [userId], references: [id])
}

model OrderProduct {
  orderId   Int
  productId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  quantity Int

  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@id([orderId, productId])
}

model Review {
  id         Int     @id @default(autoincrement())
  rating     Int
  reviewText String
  userId     Int
  productId  Int
  user       User    @relation(fields: [userId], references: [id])
  product    Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}
